name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: "${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "npm"
      - name: Install
        run: npm ci
      - name: Package
        run: npm run lint

  deploy:
    name: Deploy
    uses: ./.github/workflows/deploy.yml
    secrets: inherit
    with:
      environment: "${{ ( github.ref == 'refs/heads/main' && github.event_name == 'push' ) && 'production' || 'preview' }} "

  report:
    name: Deploy Status
    needs: [deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Add preview URL to job summary
        run: |
          echo "Deployed to ${{ needs.deploy.outputs.url }}" >> "$GITHUB_STEP_SUMMARY"
      - name: Add preview URL to PR
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            Latest deployment available at ${{ needs.deploy.outputs.url }}

  test:
    name: Test
    needs: [deploy, lint]
    uses: ./.github/workflows/playwright.yml
    with:
      url: ${{ needs.deploy.outputs.url }}

  promote:
    name: Promote deployment to production
    needs: [deploy, test]
    if: ${{ github.ref == 'refs/heads/main' }}
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          cache: "npm"
      - name: Alias build to production
        run: echo "npx vercel alias ${{ needs.deploy.outputs.url }} ${{ vars.VERCEL_ALIAS }} --token=${{ secrets.VERCEL_API_TOKEN }} --scope ${{ vars.VERCEL_SCOPE }}" >> "$GITHUB_STEP_SUMMARY"
      - name: Add test status to job summary
        run: |
          echo "Test suite ${{ env.STATUS }}"

  status:
    name: Test Status
    needs: [test]
    if: success() || failure()
    runs-on: ubuntu-latest
    env:
      STATUS: "${{ contains(needs.*.result, 'failure') && 'failed' || 'passed'}}"
    steps:
      - name: Add test status to PR
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          Append: true
          message: |
            Test suite ${{ env.STATUS }}
      - name: Failing deploy
        if: ${{ env.STATUS == 'failed' }}
        run: exit 1
